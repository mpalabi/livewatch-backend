import { Model, DataTypes, InferAttributes, InferCreationAttributes, CreationOptional, Sequelize, ForeignKey, literal } from 'sequelize';
import { User } from './User';
export class NotificationChannel extends Model<InferAttributes<NotificationChannel>, InferCreationAttributes<NotificationChannel>> { declare id: CreationOptional<string>; declare userId: ForeignKey<User['id']>; declare type: 'email' | 'sms' | 'slack' | 'webhook'; declare destination: string; declare settings: Record<string, unknown> | null; declare createdAt: CreationOptional<Date>; declare updatedAt: CreationOptional<Date>; }
export function initNotificationChannel(sequelize: Sequelize) { NotificationChannel.init({ id: { type: DataTypes.UUID, allowNull: false, defaultValue: literal('gen_random_uuid()'), primaryKey: true }, userId: { type: DataTypes.UUID, allowNull: false }, type: { type: DataTypes.ENUM('email','sms','slack','webhook'), allowNull: false }, destination: { type: DataTypes.STRING, allowNull: false }, settings: { type: DataTypes.JSONB, allowNull: true }, createdAt: DataTypes.DATE, updatedAt: DataTypes.DATE }, { sequelize, tableName: 'NotificationChannels', modelName: 'NotificationChannel' }); }
