import { Model, DataTypes, InferAttributes, InferCreationAttributes, CreationOptional, Sequelize, ForeignKey, literal } from 'sequelize';
import { Monitor } from './Monitor';
import { NotificationChannel } from './NotificationChannel';
export class MonitorNotification extends Model<InferAttributes<MonitorNotification>, InferCreationAttributes<MonitorNotification>> { declare id: CreationOptional<string>; declare monitorId: ForeignKey<Monitor['id']>; declare channelId: ForeignKey<NotificationChannel['id']>; declare notifyOn: 'down' | 'recovery' | 'threshold' | 'always'; declare thresholdMs: number | null; declare createdAt: CreationOptional<Date>; declare updatedAt: CreationOptional<Date>; }
export function initMonitorNotification(sequelize: Sequelize) { MonitorNotification.init({ id: { type: DataTypes.UUID, allowNull: false, defaultValue: literal('gen_random_uuid()'), primaryKey: true }, monitorId: { type: DataTypes.UUID, allowNull: false }, channelId: { type: DataTypes.UUID, allowNull: false }, notifyOn: { type: DataTypes.ENUM('down','recovery','threshold','always'), allowNull: false, defaultValue: 'down' }, thresholdMs: { type: DataTypes.INTEGER, allowNull: true }, createdAt: DataTypes.DATE, updatedAt: DataTypes.DATE }, { sequelize, tableName: 'MonitorNotifications', modelName: 'MonitorNotification' }); }
