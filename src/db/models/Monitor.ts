import { Model, DataTypes, InferAttributes, InferCreationAttributes, CreationOptional, Sequelize, ForeignKey } from 'sequelize';
import { User } from './User';
export class Monitor extends Model<InferAttributes<Monitor>, InferCreationAttributes<Monitor>> { declare id: CreationOptional<string>; declare userId: ForeignKey<User['id']>; declare type: 'web_app' | 'api' | 'service'; declare name: string; declare url: string; declare method: 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE' | 'HEAD'; declare expectedStatus: number; declare intervalSeconds: number; declare timeoutMs: number; declare headers: Record<string, string> | null; declare isPaused: boolean; declare createdAt: CreationOptional<Date>; declare updatedAt: CreationOptional<Date>; }
export function initMonitor(sequelize: Sequelize) { Monitor.init({ id: { type: DataTypes.UUID, allowNull: false, defaultValue: DataTypes.UUIDV4, primaryKey: true }, userId: { type: DataTypes.UUID, allowNull: false }, type: { type: DataTypes.ENUM('web_app','api','service'), allowNull: false, defaultValue: 'web_app' }, name: { type: DataTypes.STRING, allowNull: false }, url: { type: DataTypes.STRING, allowNull: false }, method: { type: DataTypes.ENUM('GET','POST','PUT','PATCH','DELETE','HEAD'), allowNull: false, defaultValue: 'GET' }, expectedStatus: { type: DataTypes.INTEGER, allowNull: false, defaultValue: 200 }, intervalSeconds: { type: DataTypes.INTEGER, allowNull: false, defaultValue: 60 }, timeoutMs: { type: DataTypes.INTEGER, allowNull: false, defaultValue: 10000 }, headers: { type: DataTypes.JSONB, allowNull: true }, isPaused: { type: DataTypes.BOOLEAN, allowNull: false, defaultValue: false }, createdAt: DataTypes.DATE, updatedAt: DataTypes.DATE }, { sequelize, tableName: 'Monitors', modelName: 'Monitor' }); }
